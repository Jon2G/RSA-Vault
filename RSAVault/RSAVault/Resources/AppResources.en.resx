<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About...</value>
  </data>
  <data name="Alert" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="Alias" xml:space="preserve">
    <value>Alias:</value>
  </data>
  <data name="AllowAccess" xml:space="preserve">
    <value>Please grant access</value>
  </data>
  <data name="AlReadyExists" xml:space="preserve">
    <value>A key with this name al ready exists,please provide a diferent name</value>
  </data>
  <data name="AuthFailed" xml:space="preserve">
    <value>Authentication failed.</value>
  </data>
  <data name="BuyMeACoffe" xml:space="preserve">
    <value>Buy me a Coffe</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Change to Spanish</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="CleanTextAsk" xml:space="preserve">
    <value>¿Clear text?</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>Developed by: Jonathan Eduardo G.G</value>
  </data>
  <data name="DevelopedFor" xml:space="preserve">
    <value>This App was developed for didactic purposes by simply illustrating Shannon's entropy.</value>
  </data>
  <data name="Encrypted" xml:space="preserve">
    <value>Encrypted: </value>
  </data>
  <data name="EquiProbable" xml:space="preserve">
    <value>Equiprobable events</value>
  </data>
  <data name="ErrorPickingFile" xml:space="preserve">
    <value>There was an error while opening this file, try another one</value>
  </data>
  <data name="Expire" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="FingerPrint" xml:space="preserve">
    <value>Enable fingerprint lock</value>
  </data>
  <data name="FingerPrintNotAvaible" xml:space="preserve">
    <value>The fingerprint reader and/or screen lock is not avaible</value>
  </data>
  <data name="FromText" xml:space="preserve">
    <value>Encrypt Text</value>
  </data>
  <data name="FromTextSubtitle" xml:space="preserve">
    <value>Protect text instantly</value>
  </data>
  <data name="GitHub" xml:space="preserve">
    <value>Take a look at the project on Github</value>
  </data>
  <data name="GrantCamera" xml:space="preserve">
    <value>Allows access to the camera so you can take photos of your surroundings and hide text in them.</value>
  </data>
  <data name="GrantPhotos" xml:space="preserve">
    <value>Allows access to the gallery so you can select photos from your device and hide text in them.</value>
  </data>
  <data name="HasDeniedCamera" xml:space="preserve">
    <value>You have disabled camera permisson for this application, to enable go to settings  app and activate camera under the permissions menu.</value>
  </data>
  <data name="HasDeniedPhotos" xml:space="preserve">
    <value>You have disabled photos gallery permisson for this application, to enable go to settings app and activate it under the permissions menu.</value>
  </data>
  <data name="HasDeniedStorage" xml:space="preserve">
    <value>You have disabled camera permisson for this application, to enable go to settings  app and activate storage under the permissions menu.</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="HidePicture" xml:space="preserve">
    <value>Hide text in a picture</value>
  </data>
  <data name="HidePictureSubtitle" xml:space="preserve">
    <value>Hide text in an image using steganography</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image :</value>
  </data>
  <data name="ItsAFileNotAnImage" xml:space="preserve">
    <value>The selected file is not an image</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Keychain" xml:space="preserve">
    <value>Keychain</value>
  </data>
  <data name="Keys" xml:space="preserve">
    <value>Keys</value>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licenses and credits</value>
  </data>
  <data name="LockReason" xml:space="preserve">
    <value>Authenticate with your fingerprint</value>
  </data>
  <data name="LockTitle" xml:space="preserve">
    <value>App lock</value>
  </data>
  <data name="MainTitle" xml:space="preserve">
    <value>RSA Vault</value>
  </data>
  <data name="MakeKey" xml:space="preserve">
    <value>Make key</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>Months</value>
  </data>
  <data name="MustProvideName" xml:space="preserve">
    <value>Must provide a valid name for this key</value>
  </data>
  <data name="MustProvidePassword" xml:space="preserve">
    <value>You must enter a strong password of at least 8 characters to protect this key.</value>
  </data>
  <data name="NewKey" xml:space="preserve">
    <value>New key</value>
  </data>
  <data name="NoKeys" xml:space="preserve">
    <value>You don't have any key
You can make a key now.</value>
  </data>
  <data name="NoNotes" xml:space="preserve">
    <value>You don't have any note
You can start by making a new note.</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Private notes</value>
  </data>
  <data name="NotesSubtitle" xml:space="preserve">
    <value>Keep your private notes safe</value>
  </data>
  <data name="NotPlainTextFile" xml:space="preserve">
    <value>The selected file is not a plain text file, continuing may result in unexpected results. 
Continue?</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password: </value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>We will never see or share your photos.</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>Report a bug</value>
  </data>
  <data name="RequestFeature" xml:space="preserve">
    <value>Request a new feature</value>
  </data>
  <data name="SaveAsNote" xml:space="preserve">
    <value>Save as a note</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="SpecialThanks" xml:space="preserve">
    <value>Special thanks to "Tapia Sanchez Daniel" for his excellent teacher labor .</value>
  </data>
  <data name="TakePhoto" xml:space="preserve">
    <value>Take photo</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text: </value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="WaitASecond" xml:space="preserve">
    <value>Wait...</value>
  </data>
  <data name="WeAreSorry" xml:space="preserve">
    <value>Oops...</value>
  </data>
  <data name="Xamarin" xml:space="preserve">
    <value>Built with Xamarin.Forms cross-platform technology</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YouCanDisableThis" xml:space="preserve">
    <value>*You can change this option later on settings app</value>
  </data>
</root>